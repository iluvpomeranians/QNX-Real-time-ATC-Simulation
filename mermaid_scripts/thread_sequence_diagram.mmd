sequenceDiagram
    participant AircraftMain as Aircraft::startThreads()
    participant PositionThread as updatePositionThread
    participant IPCThread as messageHandlerThread
    participant AirspaceSharedMemory
    participant Communication
    participant Radar

    AircraftMain ->> PositionThread: pthread_create(updatePositionThread)
    AircraftMain ->> IPCThread: pthread_create(messageHandlerThread)

    loop Every 1 second
        PositionThread ->> AirspaceSharedMemory: lock()
        PositionThread ->> AirspaceSharedMemory: update x/y/z<br>+ lastupdatedTime
        PositionThread ->> AirspaceSharedMemory: unlock()
    end

    Note over IPCThread: Waiting on MsgReceive()

    Communication ->> IPCThread: MsgSend (CommunicationCommand)
    IPCThread ->> AirspaceSharedMemory: lock()
    IPCThread ->> AirspaceSharedMemory: update speed or position
    IPCThread ->> AirspaceSharedMemory: unlock()
    IPCThread ->> Communication: MsgReply

    Radar ->> IPCThread: MsgSend (RadarMessage)
    IPCThread ->> Radar: MsgReply (RadarReply)

    AircraftMain ->> IPCThread: send_terminator_message()
    IPCThread ->> AircraftMain: exits thread loop