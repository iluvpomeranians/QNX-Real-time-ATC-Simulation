#include <fcntl.h>
#include <sys/mman.h>
#include <unistd.h>
#include <iostream>
#include <fstream>
#include <sstream>

#define SHM_NAME "/air_traffic_shm"
#define MAX_AIRCRAFT 50

struct AircraftData {
    int id;
    double x, y, z;
    double speedX, speedY, speedZ;
    int detected;
    int responded;
};

// Shared memory pointer
AircraftData* aircrafts;

// ðŸš€ Loads aircraft data from a text file into shared memory
void loadAircraftData(const std::string& filename) {
    std::ifstream file(filename);
    if (!file) {
        perror("Error: Cannot open");
        return;
    }

    int index = 0;
    int time, id;
    double x, y, z, speedX, speedY, speedZ;

    while (file >> time >> id >> x >> y >> z >> speedX >> speedY >> speedZ && index < MAX_AIRCRAFT) {
        aircrafts[index++] = {id, x, y, z, speedX, speedY, speedZ, 1, 1};
        std::cout << "Loaded Aircraft ID " << id << "\n";
    }

    file.close();
}

int main() {

    // create the shared mem
    int shm_fd = shm_open(SHM_NAME, O_CREAT | O_RDWR, 0666);
    ftruncate(shm_fd, sizeof(AircraftData) * MAX_AIRCRAFT);
    aircrafts = (AircraftData*) mmap(NULL, sizeof(AircraftData) * MAX_AIRCRAFT,
                                     PROT_READ | PROT_WRITE, MAP_SHARED, shm_fd, 0);
    if (aircrafts == MAP_FAILED) {
        perror("mmap failed");
        return 1;
    }

    loadAircraftData("src/aircraft_data.txt");

    std::cout << "Radar System initialized. Shared memory ready.\n";

    //
    while (true) sleep(10);

    return 0;
}
